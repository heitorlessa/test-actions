
# [x] Fetch git tag
# [ ] Poetry cache
# [ ] Ciwheel
# [ ] Publish wheels PyPi

name: Dummy action

on:
  push:
    branches: [master]
    tags: 
      - v*
#   release:
#       types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Capture branch and tag
      id: branch_name
      run: |
        echo ::set-env name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
        echo ::set-env name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
    - name: Print source, tag, and branch
      run: |
        echo "Branch: ${SOURCE_BRANCH}"
        echo "Tag: ${SOURCE_TAG}"

  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ubuntu-18.04
        python-version: [3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install cibuildwheel
      run: |
        # python -m pip install cibuildwheel~=1.4.2
        # Run patched version that supports pyproject.toml presence only
        python -m pip install git+https://github.com/heitorlessa/cibuildwheel.git@improv/support-pyproject-poetry

    - name: Install Visual C++ for Python 2.7
      if: startsWith(matrix.os, 'windows')
      run: |
        choco install vcpython27 -f -y

    - name: Build wheel
      run: |
        # https://github.com/pyca/cryptography/issues/5101
        # export CIBW_BEFORE_BUILD="pip install pip --upgrade"
        # export CIBW_BUILD="cp36-* cp37-* cp38-*"
        # export CIBW_SKIP="*-manylinux_i686 *-manylinux_aarch64 *-manylinux_ppc64le *-manylinux_s390x"
        python -m cibuildwheel --output-dir wheelhouse
      env:
        CIBW_BEFORE_BUILD: "pip install pip --upgrade"
        CIBW_BUILD: "cp36-* cp37-* cp38-*"
        CIBW_SKIP: "*-manylinux_i686 *-manylinux_aarch64 *-manylinux_ppc64le *-manylinux_s390x"

    - uses: actions/upload-artifact@v1
      with:
        name: wheels
        path: ./wheelhouse
  
  publish:
    needs: build_wheels
    runs-on: ubuntu-latest
    steps:
    - name: Get wheels
      uses: actions/download-artifact@v1
      with:
          name: wheels
    - name: Check wheels
      run: |
        ls -lh wheels/*

# Poetry cache test
    # - name: Hello master
    #   run: |
    #     echo "Hello"
    #   if: env.SOURCE_BRANCH == 'master'
    # - name: Bye
    #   run: |
    #     echo "Bye!"
